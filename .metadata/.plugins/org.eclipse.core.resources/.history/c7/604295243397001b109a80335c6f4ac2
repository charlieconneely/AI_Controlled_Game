package ie.gmit.sw.ai;

public class DepthLimitedSearch {
	
	private GameModel model;
	private int[] positionOfEnemy;
	
	public DepthLimitedSearch(GameModel model) {
		this.model = model;
	}
	
	public int search(int row, int col, int depth, char enemyID) {
		// if hunter - search for scavengers 
		if (enemyID == '\u0035') { 
			return searchForScavenger(row, col, depth);
		} else {
			return searchForHunter(row, col, depth);
		}
	}
	
	private int searchForScavenger(int row, int col, int depth) {
		for (int i = (row - depth); i <= (row + depth); i++) {
			for (int j = (col - depth); j <= (col + depth); j++) {
				boolean present = checkForScavenger(model.get(i, j));
				if (present) {
					setTargetPosition(i, j);
					return 3;
				}
			}
		}
		return 0;
	}
	
	private int searchForHunter(int row, int col, int depth) {
		for (int i = (row - depth); i <= (row + depth); i++) {
			for (int j = (col - depth); j <= (col + depth); j++) {
				if (model.get(i, j) == '1') {
					return 1;
				} else if (model.get(i, j) == '5') {
					return 2;
				}
			}
		}
		return 0;
	}
	
	public int[] getTargetPosition() {
		return positionOfEnemy;
	}
	
	public void setTargetPosition(int r, int c) {
		int[] pos = {r, c};
		positionOfEnemy = pos;
	}
	
	private boolean checkForScavenger(char pos) {
		switch (pos) {
			case '2': // scavengers
			case '3':
			case '4':
			case '6':
				return true;
			default:
				return false;
		}
	}
}
